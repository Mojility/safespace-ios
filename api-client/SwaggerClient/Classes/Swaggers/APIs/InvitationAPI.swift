//
// InvitationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class InvitationAPI: APIBase {
    /**
     Validate an invitation token
     
     - parameter token: (query) The invitation token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func authValidatePost(token: String, completion: @escaping ((_ data: ValidateResponse?,_ error: Error?) -> Void)) {
        authValidatePostWithRequestBuilder(token: token).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Validate an invitation token
     - POST /auth/validate
     - Validates an invitation token and returns whether the user exists or not
     - examples: [{contentType=application/json, example={
  "person_exists" : true
}}]
     
     - parameter token: (query) The invitation token 

     - returns: RequestBuilder<ValidateResponse> 
     */
    open class func authValidatePostWithRequestBuilder(token: String) -> RequestBuilder<ValidateResponse> {
        let path = "/auth/validate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "token": token
        ])
        

        let requestBuilder: RequestBuilder<ValidateResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
